-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["runner"] = {
                    
                    
                    
                    {
                    pe_fixture_id = "head", density = 3, friction = 0.5, bounce = 0.5, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    radius = 16.125,
					position = { -25.7058821982579, -65.2058823297386 }
                    }
                    
                    
                     ,
                    
                    
                    {
                    pe_fixture_id = "body", density = 3, friction = 0.5, bounce = 0.5, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -27, 16  ,  -36, -46  ,  -2, -53  ,  25, -5  }
                    }
                    
                    
                    
                     ,
                    
                    {
                    pe_fixture_id = "legs", density = 3, friction = 0.5, bounce = 0.5, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    radius = 33.242,
					position = { 5.38235143301398, 38.7352951617596 }
                    }
                    
                    
                     ,
                    
                    {
                    pe_fixture_id = "sensor1", density = 2, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    radius = 10.000,
					position = { -70.3529418880139, -8.32352787266555 }
                    }
                    
                    
                     ,
                    
                    {
                    pe_fixture_id = "sensor2", density = 2, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    radius = 10.000,
					position = { 69.3529389954356, -11.2647043123171 }
                    }
                    
                    
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
						fixture.position = { s * fixture.position[1], s * fixture.position[2] }
                    end
                end
        end
	
	function physics:get(name)
		return table.unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

